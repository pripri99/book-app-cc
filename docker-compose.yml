version: "3.4"

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    image: postgres:13.2
    container_name: keycloak-nodejs-example-postgress
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak

  keycloak:
    image: jboss/keycloak:14.0.0
    container_name: keycloak-nodejs-example-keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    command:
      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/opt/jboss/keycloak/import"
      - "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
    ports:
      - 8080:8080
    volumes:
      - "./docker/import_realm_users:/opt/jboss/keycloak/import"
    depends_on:
      - postgres

  book-app:
    build:
      context: ./bookApp
    container_name: book-app
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./bookApp:/code
    depends_on:
      - keycloak

  nginx:
    restart: always
    build: ./nginx
    ports:
      - "81:80"
    depends_on:
      - book-app
